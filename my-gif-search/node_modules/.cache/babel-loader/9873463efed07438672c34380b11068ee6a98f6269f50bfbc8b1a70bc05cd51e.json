{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rusla\\\\Desktop\\\\dz12\\\\my-gif-search\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// API ключ и лимит можно оставить здесь для наглядности\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'oVksrQHmlOXmIXI4qBy6XHsUExbE8ci4';\nconst SEARCH_LIMIT = 24;\nexport default function App() {\n  _s();\n  // Используем состояние (state) для хранения данных\n  const [query, setQuery] = useState(''); // Текст из поля ввода\n  const [gifs, setGifs] = useState([]); // Массив с найденными гифками\n  const [loading, setLoading] = useState(false); // Статус загрузки\n  const [message, setMessage] = useState('Введите запрос, чтобы начать.'); // Сообщение для пользователя\n\n  // --- ОСНОВНАЯ ФУНКЦИЯ ДЛЯ HTTP-ЗАПРОСА ---'\n  const searchGifs = async () => {\n    // Если поле ввода пустое, ничего не делаем\n    if (!query) {\n      setMessage('Пожалуйста, введите что-нибудь для поиска.');\n      return;\n    }\n\n    // Обновляем состояния перед началом запроса\n    setLoading(true); // Показываем, что идет загрузка\n    setMessage(''); // Очищаем сообщение\n    setGifs([]); // Очищаем старые гифки\n\n    // Формируем URL для запроса к API\n    const apiUrl = `https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${encodeURIComponent(query)}&limit=${SEARCH_LIMIT}&lang=ru`;\n    try {\n      // Выполняем HTTP GET-запрос с помощью fetch\n      const response = await fetch(apiUrl);\n      // Преобразуем ответ сервера в формат JSON\n      const data = await response.json();\n\n      // Проверяем, нашлись ли гифки\n      if (data.data && data.data.length > 0) {\n        setGifs(data.data); // Сохраняем гифки в состояние\n      } else {\n        setMessage(`По запросу \"${query}\" ничего не найдено.`);\n      }\n    } catch (error) {\n      // Если произошла ошибка (например, нет интернета)\n      console.error(\"Ошибка при запросе:\", error);\n      setMessage(\"Произошла ошибка при загрузке. Попробуйте снова.\");\n    } finally {\n      // Этот блок выполнится в любом случае после try или catch\n      setLoading(false); // Убираем статус загрузки\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 dark:bg-gray-900 text-gray-800 dark:text-gray-200 min-h-screen font-sans\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-8 max-w-4xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"text-center mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-bold text-gray-900 dark:text-white\",\n          children: \"\\u041F\\u043E\\u0438\\u0441\\u043A GIF \\u043D\\u0430 React\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 dark:text-gray-400 mt-2\",\n          children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043B\\u043E\\u0432\\u043E \\u0438\\u043B\\u0438 \\u0444\\u0440\\u0430\\u0437\\u0443, \\u0447\\u0442\\u043E\\u0431\\u044B \\u043D\\u0430\\u0439\\u0442\\u0438 \\u0433\\u0438\\u0444\\u043A\\u0438.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col sm:flex-row gap-4 mb-8 sticky top-4 bg-gray-100/80 dark:bg-gray-900/80 backdrop-blur-sm p-4 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          placeholder: \"\\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440, '\\u0440\\u0430\\u0434\\u043E\\u0441\\u0442\\u044C'\",\n          className: \"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 bg-white dark:bg-gray-800\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: searchGifs,\n          disabled: loading,\n          className: \"w-full sm:w-auto bg-indigo-600 text-white font-semibold px-6 py-2 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 dark:focus:ring-offset-gray-900 transition-colors duration-200 disabled:bg-indigo-400 disabled:cursor-not-allowed\",\n          children: loading ? 'Загрузка...' : 'Найти'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center my-8 text-lg\",\n        children: message && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\",\n        children: gifs.map(gif => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white dark:bg-gray-800 rounded-lg overflow-hidden shadow-lg transform hover:-translate-y-1 transition-transform duration-200\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: gif.images.fixed_height.url,\n            alt: gif.title || 'GIF animation',\n            className: \"w-full h-48 object-cover\",\n            loading: \"lazy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this)\n        }, gif.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"UDVbup6mT//aTp1T/JfJ50lWQQg=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","API_KEY","SEARCH_LIMIT","App","_s","query","setQuery","gifs","setGifs","loading","setLoading","message","setMessage","searchGifs","apiUrl","encodeURIComponent","response","fetch","data","json","length","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","disabled","map","gif","src","images","fixed_height","url","alt","title","id","_c","$RefreshReg$"],"sources":["C:/Users/rusla/Desktop/dz12/my-gif-search/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// API ключ и лимит можно оставить здесь для наглядности\r\nconst API_KEY = 'oVksrQHmlOXmIXI4qBy6XHsUExbE8ci4';\r\nconst SEARCH_LIMIT = 24;\r\n\r\nexport default function App() {\r\n    // Используем состояние (state) для хранения данных\r\n    const [query, setQuery] = useState('');      // Текст из поля ввода\r\n    const [gifs, setGifs] = useState([]);        // Массив с найденными гифками\r\n    const [loading, setLoading] = useState(false); // Статус загрузки\r\n    const [message, setMessage] = useState('Введите запрос, чтобы начать.'); // Сообщение для пользователя\r\n\r\n    // --- ОСНОВНАЯ ФУНКЦИЯ ДЛЯ HTTP-ЗАПРОСА ---'\r\n    const searchGifs = async () => {\r\n        // Если поле ввода пустое, ничего не делаем\r\n        if (!query) {\r\n            setMessage('Пожалуйста, введите что-нибудь для поиска.');\r\n            return;\r\n        }\r\n\r\n        // Обновляем состояния перед началом запроса\r\n        setLoading(true);     // Показываем, что идет загрузка\r\n        setMessage('');       // Очищаем сообщение\r\n        setGifs([]);          // Очищаем старые гифки\r\n\r\n        // Формируем URL для запроса к API\r\n        const apiUrl = `https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${encodeURIComponent(query)}&limit=${SEARCH_LIMIT}&lang=ru`;\r\n\r\n        try {\r\n            // Выполняем HTTP GET-запрос с помощью fetch\r\n            const response = await fetch(apiUrl);\r\n            // Преобразуем ответ сервера в формат JSON\r\n            const data = await response.json();\r\n\r\n            // Проверяем, нашлись ли гифки\r\n            if (data.data && data.data.length > 0) {\r\n                setGifs(data.data); // Сохраняем гифки в состояние\r\n            } else {\r\n                setMessage(`По запросу \"${query}\" ничего не найдено.`);\r\n            }\r\n        } catch (error) {\r\n            // Если произошла ошибка (например, нет интернета)\r\n            console.error(\"Ошибка при запросе:\", error);\r\n            setMessage(\"Произошла ошибка при загрузке. Попробуйте снова.\");\r\n        } finally {\r\n            // Этот блок выполнится в любом случае после try или catch\r\n            setLoading(false); // Убираем статус загрузки\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg-gray-100 dark:bg-gray-900 text-gray-800 dark:text-gray-200 min-h-screen font-sans\">\r\n            <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\r\n                <header className=\"text-center mb-8\">\r\n                    <h1 className=\"text-4xl font-bold text-gray-900 dark:text-white\">Поиск GIF на React</h1>\r\n                    <p className=\"text-gray-600 dark:text-gray-400 mt-2\">Введите слово или фразу, чтобы найти гифки.</p>\r\n                </header>\r\n\r\n                <div className=\"flex flex-col sm:flex-row gap-4 mb-8 sticky top-4 bg-gray-100/80 dark:bg-gray-900/80 backdrop-blur-sm p-4 rounded-lg shadow-md\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={query}\r\n                        onChange={(e) => setQuery(e.target.value)}\r\n                        placeholder=\"Например, 'радость'\"\r\n                        className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 bg-white dark:bg-gray-800\"\r\n                    />\r\n                    <button\r\n                        onClick={searchGifs}\r\n                        disabled={loading}\r\n                        className=\"w-full sm:w-auto bg-indigo-600 text-white font-semibold px-6 py-2 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 dark:focus:ring-offset-gray-900 transition-colors duration-200 disabled:bg-indigo-400 disabled:cursor-not-allowed\"\r\n                    >\r\n                        {loading ? 'Загрузка...' : 'Найти'}\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"text-center my-8 text-lg\">\r\n                    {message && <p className=\"text-gray-500\">{message}</p>}\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\r\n                    {gifs.map(gif => (\r\n                        <div key={gif.id} className=\"bg-white dark:bg-gray-800 rounded-lg overflow-hidden shadow-lg transform hover:-translate-y-1 transition-transform duration-200\">\r\n                            <img\r\n                                src={gif.images.fixed_height.url}\r\n                                alt={gif.title || 'GIF animation'}\r\n                                className=\"w-full h-48 object-cover\"\r\n                                loading=\"lazy\"\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}