{"ast":null,"code":"import React,{useState}from'react';import'./App.css';// API ключ и лимит можно оставить здесь для наглядности\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_KEY='oVksrQHmlOXmIXI4qBy6XHsUExbE8ci4';const SEARCH_LIMIT=24;export default function App(){// Используем состояние (state) для хранения данных\nconst[query,setQuery]=useState('');// Текст из поля ввода\nconst[gifs,setGifs]=useState([]);// Массив с найденными гифками\nconst[loading,setLoading]=useState(false);// Статус загрузки\nconst[message,setMessage]=useState('Введите запрос, чтобы начать.');// Сообщение для пользователя\n// --- ОСНОВНАЯ ФУНКЦИЯ ДЛЯ HTTP-ЗАПРОСА ---'\nconst searchGifs=async()=>{// Если поле ввода пустое, ничего не делаем\nif(!query){setMessage('Пожалуйста, введите что-нибудь для поиска.');return;}// Обновляем состояния перед началом запроса\nsetLoading(true);// Показываем, что идет загрузка\nsetMessage('');// Очищаем сообщение\nsetGifs([]);// Очищаем старые гифки\n// Формируем URL для запроса к API\nconst apiUrl=\"https://api.giphy.com/v1/gifs/search?api_key=\".concat(API_KEY,\"&q=\").concat(encodeURIComponent(query),\"&limit=\").concat(SEARCH_LIMIT,\"&lang=ru\");try{// Выполняем HTTP GET-запрос с помощью fetch\nconst response=await fetch(apiUrl);// Преобразуем ответ сервера в формат JSON\nconst data=await response.json();// Проверяем, нашлись ли гифки\nif(data.data&&data.data.length>0){setGifs(data.data);// Сохраняем гифки в состояние\n}else{setMessage(\"\\u041F\\u043E \\u0437\\u0430\\u043F\\u0440\\u043E\\u0441\\u0443 \\\"\".concat(query,\"\\\" \\u043D\\u0438\\u0447\\u0435\\u0433\\u043E \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E.\"));}}catch(error){// Если произошла ошибка (например, нет интернета)\nconsole.error(\"Ошибка при запросе:\",error);setMessage(\"Произошла ошибка при загрузке. Попробуйте снова.\");}finally{// Этот блок выполнится в любом случае после try или catch\nsetLoading(false);// Убираем статус загрузки\n}};return/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-100 dark:bg-gray-900 text-gray-800 dark:text-gray-200 min-h-screen font-sans\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto px-4 py-8 max-w-4xl\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"text-center mb-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-4xl font-bold text-gray-900 dark:text-white\",children:\"\\u041F\\u043E\\u0438\\u0441\\u043A GIF \\u043D\\u0430 React\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-400 mt-2\",children:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043B\\u043E\\u0432\\u043E \\u0438\\u043B\\u0438 \\u0444\\u0440\\u0430\\u0437\\u0443, \\u0447\\u0442\\u043E\\u0431\\u044B \\u043D\\u0430\\u0439\\u0442\\u0438 \\u0433\\u0438\\u0444\\u043A\\u0438.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col sm:flex-row gap-4 mb-8 sticky top-4 bg-gray-100/80 dark:bg-gray-900/80 backdrop-blur-sm p-4 rounded-lg shadow-md\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:query,onChange:e=>setQuery(e.target.value),placeholder:\"\\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440, '\\u0440\\u0430\\u0434\\u043E\\u0441\\u0442\\u044C'\",className:\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 bg-white dark:bg-gray-800\"}),/*#__PURE__*/_jsx(\"button\",{onClick:searchGifs,disabled:loading,className:\"w-full sm:w-auto bg-indigo-600 text-white font-semibold px-6 py-2 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 dark:focus:ring-offset-gray-900 transition-colors duration-200 disabled:bg-indigo-400 disabled:cursor-not-allowed\",children:loading?'Загрузка...':'Найти'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center my-8 text-lg\",children:message&&/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500\",children:message})}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\",children:gifs.map(gif=>/*#__PURE__*/_jsx(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg overflow-hidden shadow-lg transform hover:-translate-y-1 transition-transform duration-200\",children:/*#__PURE__*/_jsx(\"img\",{src:gif.images.fixed_height.url,alt:gif.title||'GIF animation',className:\"w-full h-48 object-cover\",loading:\"lazy\"})},gif.id))})]})});}","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","API_KEY","SEARCH_LIMIT","App","query","setQuery","gifs","setGifs","loading","setLoading","message","setMessage","searchGifs","apiUrl","concat","encodeURIComponent","response","fetch","data","json","length","error","console","className","children","type","value","onChange","e","target","placeholder","onClick","disabled","map","gif","src","images","fixed_height","url","alt","title","id"],"sources":["C:/Users/rusla/Desktop/dz12/my-gif-search/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\n\r\n// API ключ и лимит можно оставить здесь для наглядности\r\nconst API_KEY = 'oVksrQHmlOXmIXI4qBy6XHsUExbE8ci4';\r\nconst SEARCH_LIMIT = 24;\r\n\r\nexport default function App() {\r\n    // Используем состояние (state) для хранения данных\r\n    const [query, setQuery] = useState('');      // Текст из поля ввода\r\n    const [gifs, setGifs] = useState([]);        // Массив с найденными гифками\r\n    const [loading, setLoading] = useState(false); // Статус загрузки\r\n    const [message, setMessage] = useState('Введите запрос, чтобы начать.'); // Сообщение для пользователя\r\n\r\n    // --- ОСНОВНАЯ ФУНКЦИЯ ДЛЯ HTTP-ЗАПРОСА ---'\r\n    const searchGifs = async () => {\r\n        // Если поле ввода пустое, ничего не делаем\r\n        if (!query) {\r\n            setMessage('Пожалуйста, введите что-нибудь для поиска.');\r\n            return;\r\n        }\r\n\r\n        // Обновляем состояния перед началом запроса\r\n        setLoading(true);     // Показываем, что идет загрузка\r\n        setMessage('');       // Очищаем сообщение\r\n        setGifs([]);          // Очищаем старые гифки\r\n\r\n        // Формируем URL для запроса к API\r\n        const apiUrl = `https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${encodeURIComponent(query)}&limit=${SEARCH_LIMIT}&lang=ru`;\r\n\r\n        try {\r\n            // Выполняем HTTP GET-запрос с помощью fetch\r\n            const response = await fetch(apiUrl);\r\n            // Преобразуем ответ сервера в формат JSON\r\n            const data = await response.json();\r\n\r\n            // Проверяем, нашлись ли гифки\r\n            if (data.data && data.data.length > 0) {\r\n                setGifs(data.data); // Сохраняем гифки в состояние\r\n            } else {\r\n                setMessage(`По запросу \"${query}\" ничего не найдено.`);\r\n            }\r\n        } catch (error) {\r\n            // Если произошла ошибка (например, нет интернета)\r\n            console.error(\"Ошибка при запросе:\", error);\r\n            setMessage(\"Произошла ошибка при загрузке. Попробуйте снова.\");\r\n        } finally {\r\n            // Этот блок выполнится в любом случае после try или catch\r\n            setLoading(false); // Убираем статус загрузки\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg-gray-100 dark:bg-gray-900 text-gray-800 dark:text-gray-200 min-h-screen font-sans\">\r\n            <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\r\n                <header className=\"text-center mb-8\">\r\n                    <h1 className=\"text-4xl font-bold text-gray-900 dark:text-white\">Поиск GIF на React</h1>\r\n                    <p className=\"text-gray-600 dark:text-gray-400 mt-2\">Введите слово или фразу, чтобы найти гифки.</p>\r\n                </header>\r\n\r\n                <div className=\"flex flex-col sm:flex-row gap-4 mb-8 sticky top-4 bg-gray-100/80 dark:bg-gray-900/80 backdrop-blur-sm p-4 rounded-lg shadow-md\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={query}\r\n                        onChange={(e) => setQuery(e.target.value)}\r\n                        placeholder=\"Например, 'радость'\"\r\n                        className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 bg-white dark:bg-gray-800\"\r\n                    />\r\n                    <button\r\n                        onClick={searchGifs}\r\n                        disabled={loading}\r\n                        className=\"w-full sm:w-auto bg-indigo-600 text-white font-semibold px-6 py-2 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 dark:focus:ring-offset-gray-900 transition-colors duration-200 disabled:bg-indigo-400 disabled:cursor-not-allowed\"\r\n                    >\r\n                        {loading ? 'Загрузка...' : 'Найти'}\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"text-center my-8 text-lg\">\r\n                    {message && <p className=\"text-gray-500\">{message}</p>}\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\r\n                    {gifs.map(gif => (\r\n                        <div key={gif.id} className=\"bg-white dark:bg-gray-800 rounded-lg overflow-hidden shadow-lg transform hover:-translate-y-1 transition-transform duration-200\">\r\n                            <img\r\n                                src={gif.images.fixed_height.url}\r\n                                alt={gif.title || 'GIF animation'}\r\n                                className=\"w-full h-48 object-cover\"\r\n                                loading=\"lazy\"\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}